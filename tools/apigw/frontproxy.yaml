admin:
  access_log: 
    - name: no_log
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
        path: "/dev/stdout"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 10001

cluster_manager:
  outlier_detection:
    event_log_path: "/dev/stdout"

static_resources:
  listeners:
    - name: api_listener
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 10000
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: grpc_json
                codec_type: AUTO
                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["api.demohr.localdev:10000"]
                      routes:
                        - match:
                            {
                              prefix: "/",
                              headers:
                                [{ name: ":method", string_match: {exact: "OPTIONS" }}],
                            }
                          # fake cluster route ... some issue in envoy.
                          route:
                            { cluster: "employee_grpc", timeout: 120s }
                        - match: { prefix: "/Employee.", grpc: {} }
                          route: { cluster: "employee_grpc", timeout: 120s }
                        - match: { prefix: "/Knowledge.", grpc: {} }
                          route: { cluster: "knowledge_grpc", timeout: 120s }
                        - match: { prefix: "/EmployeeSearchBff.", grpc: {} }
                          route: { cluster: "employeesearchbff_grpc", timeout: 120s }
                      cors:
                        allow_origin_string_match:
                          - exact: http://web.demohr.localdev:8080
                          - exact: http://web.demohr.localdev:8080/
                          - exact: web.demohr.localdev
                        allow_methods: GET, PUT, DELETE, POST, PATCH, OPTIONS
                        allow_headers: content-type,origin,referer,authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web
                        expose_headers: grpc-status,grpc-message,x-envoy-upstream-service-time,WWW-Authenticate
                http_filters:
                  # - name: envoy.filters.http.lua
                    # typed_config:
                      # "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                      # inline_code: |
                        # function envoy_on_response(response_handle)
                          # local headers = response_handle:headers()
                          # if headers:get(":status") == "401" then
                            # if headers:get("access-control-allow-origin") == nil then
                              # headers:add("access-control-allow-origin", "http://web.demohr.localdev:8080")
                              # headers:add("access-control-expose-headers", "*")
                            # end
                          # end
                        # end
                  - name: envoy.filters.http.cors
                  # - name: envoy.filters.http.jwt_authn
                    # typed_config:
                      # "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                      # providers:
                        # identityprovider:
                          # issuer: http://api.demohr.localdev:10000/
                          # remote_jwks:
                            # http_uri: 
                              # uri: http://keycloak/.well-known/jwks
                              # cluster: keycloak_http
                              # timeout: 5s
                          # forward: true
                      # rules:
                        # - match:
                            # path: /connect/token
                        # - match:
                            # path: /connect/revoke
                        # - match:
                            # prefix: /
                          # requires:
                            # provider_name: identityprovider
                      # bypass_cors_preflight: true
                  # - name: envoy.filters.http.ext_authz
                    # typed_config:
                      # "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                      # grpc_service:
                        # envoy_grpc:
                          # cluster_name: openpolicyagent
                        # timeout: 0.5s
                      # transport_api_version: V3
                      # failure_mode_allow: false
                      # with_request_body:
                        # max_request_bytes: 20000
                        # allow_partial_message: true
                  #- name: envoy.filters.http.grpc_web
                  - name: envoy.filters.http.grpc_json_transcoder
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                      proto_descriptor: "/descriptor/guide.pb"
                      ignore_unknown_query_parameters: true
                      query_param_unescape_plus: true
                      services:
                        - "Employee.EmployeeGrpcService"
                        - "EmployeeSearchBff.SearchGrpcService"
                        - "Knowledge.Certificate.CertificateGrpcService"
                        - "Knowledge.Skill.SkillGrpcService"
                        
                      print_options:
                        add_whitespace: true
                        always_print_primitive_fields: true
                        always_print_enums_as_ints: true
                        preserve_proto_field_names: true
                  - name: envoy.filters.http.router

  clusters:
    - name: employee_grpc
      connect_timeout: 1s
      type: logical_dns
      lb_policy: round_robin
      dns_lookup_family: V4_ONLY
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options: {}
      load_assignment:
        cluster_name: employee_grpc
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: employee.api
                      port_value: 90
    - name: knowledge_grpc
      connect_timeout: 1s
      type: logical_dns
      lb_policy: round_robin
      dns_lookup_family: V4_ONLY
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options: {}
      load_assignment:
        cluster_name: knowledge_grpc
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: knowledge.api
                      port_value: 90
    - name: employeesearchbff_grpc
      connect_timeout: 1s
      type: logical_dns
      lb_policy: round_robin
      dns_lookup_family: V4_ONLY
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options: {}
      load_assignment:
        cluster_name: employeesearchbff_grpc
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: employeesearchbff.api
                      port_value: 90